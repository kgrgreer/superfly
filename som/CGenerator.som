CGenerator = (
  | classes literals methods |

  classes = ( ^classes )

  init = (
    classes  := Vector new.
    literals := Vector new.
    methods  := Vector new.
  )

  addClass: c = ( classes append: c )

  addMethod: m = ( methods append: m )

  toC = ( | s |
    s := '\n/* CGenerator Output */\n\n'.
    (ASTMethod methods keys ) do: [ :m |
      s := s + '#define METHOD_' + m + ' ' + (ASTMethod methods get: m) + ';\n'
    ].
    classes do: [ :c | s := s + c toC ].
    s := s + '\n'.
    ^ s
  )

----

  | instance_ |

  instance = (
    instance_ ifNil: [
      instance_ := CGenerator new.
      instance_ init.
    ].
    ^ instance_
  )
)
