ASTClass = (
  | name extends fields methods |

  name = ( ^ name )
  name:    v = ( name    := v )
  extends: v = ( extends := v )
  fields:  v = ( fields  := v )
  methods: v = (
    methods := v.
    v do: [ :m | m holder: self ]
  )

  asString = (
    ^ self toC
"    ^ 'ASTClass name: \'' + name + '\' extends: ' + extends"
  )

  toC = ( | s |
    s := '\ntypedef struct ' + name + '_ {\n'.
    fields do: [ :f |
      s := s + '  SObject ' + f + ';\n'.
    ].
    s := s + '} ' + name + ';\n'.

    methods do: [ :m |
      s := s + m toC.
    ].

    ^s
  )

----
  new: n = ( | c |
    c := ASTClass new.
    c name: n.
    c extends: 'Object'.
    c fields:  Vector new.
    c methods: Vector new.
    ^c
  )
)
